# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Dist & Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  actions: read
  checks: write # allow dependabot-triggered runs to create checks
  contents: write # allow dependabot-triggered runs to create releases
  deployments: read
  issues: read
  discussions: none
  packages: read
  pages: none
  pull-requests: write # allow dependabot-triggered runs to comment on PRs
  repository-projects: read
  security-events: none
  statuses: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0
        
    -name: Print Test Vars
      run: echo "targetRef ${{ github.base_ref }}"
      # run: echo sourceRef = '${{ github.head_ref }}'
      # run: echo mergeRef = '${{ github.ref }}'
      # run: echo prIsDraft = '${{ github.event.pull_request.draft }}'
      # run: echo type = '${{ github.event.action }}'
      # run: echo merged = '${{ github.event.pull_request.merged }}'

    - name: Setup Git
      run: |
        git config user.name "Github Actions"
        git config user.email "<>"
        
    - name: Use Node 18
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Dev Packages
      run: npm ci

    - name: Test and Coverage 
      run: npm run cover --if-present

    - name: Upload Code Coverage
      uses: actions/upload-artifact@v3
      with:
        name: Code Coverage
        path: coverage

    - name: Update Badges
      run: npm run badges --if-present
            
    - name: Bump Version
      run: npm version patch
      
    - name: Build Dist
      run: npm run build --if-present
      
    - name: Push Version and Badges To Repo
      run: |
        git push --follow-tags origin main

    - name: Zip the published app
      run: |
        (zip -r ./dist.zip ./dist)

    - name: Upload Dist
      uses: actions/upload-artifact@v3
      with:
        name: Dist
        path: ./dist.zip

    # - run: npm publish --tag ${{ env.DIST_TAG }}
    #   working-directory: './dist'
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Special per-job token generated by GH for interacting with the repo
    
